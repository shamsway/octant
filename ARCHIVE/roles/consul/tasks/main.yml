---
# Install consul and base config
- name: Install consul
  ansible.builtin.include_role:
    name: install-hashi
  vars:
    name: consul-server
    apt-package: consul
    user: root
    group: root

- name: No value for consul_gossip_key - Performing inital Consul config
  ansible.builtin.include_role:
    name: configure-consul
  when: consul_gossip_key is not defined

- name: Check that the CA for consul exists
  ansible.builtin.stat:
    path: "{{ configdirs.consul-server }}/consul-agent-ca.pem"
  register: stat_result

- name: Consul TLS client
  ansible.builtin.shell: consul tls ca create && consul tls cert create -server -dc {{ datacenter }} && consul tls cert create -client -dc {{ datacenter }}
  args:
    chdir: "{{ configdirs.consul-server }}"
  when: not stat_result.stat.exists

- name: Ensure consul.d directory ownership
  ansible.builtin.file:
    path: "{{ configdirs.consul-server }}"
    state: directory
    owner: {{ user }}
    group: {{ group }}
    recurse: true

- ansible.builtin.include_tasks: ./update-config.yml

- name: Configure dnsmasq forwarding
  ansible.builtin.copy:
    content: |
      no-hosts
      server={{ external_dns_resolver1 }}
      server={{ external_dns_resolver2 }}
      server=/consul/127.0.0.1#8600
      server=/shamsway.net/127.0.0.1#8600
    dest: /etc/dnsmasq.d/shamsway.conf
    owner: root
    group: root
    mode: "0644"

- name: Restart consul
  ansible.builtin.systemd:
    name: dnsmasq
    state: restarted

- name: Configure /etc/resolv.conf with a single resolver
  lineinfile:
    path: /etc/resolv.conf
    line: nameserver 127.0.0.1
    regexp: '^nameserver'
    state: present
    create: yes

- name: Remove any other configuration from /etc/resolv.conf
  lineinfile:
    path: /etc/resolv.conf
    regexp: '^(?!nameserver 127\.0\.0\.1$).*'
    state: absent