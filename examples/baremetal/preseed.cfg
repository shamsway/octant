# Bare metal install

# Localization
d-i debian-installer/locale string en_US
d-i keyboard-configuration/xkb-keymap select us

# Network configuration
d-i netcfg/choose_interface select auto
#d-i netcfg/get_hostname string debian
#d-i netcfg/get_domain string shamsway.net

# Mirror settings
d-i mirror/country string manual
d-i mirror/http/hostname string http.us.debian.org
d-i mirror/http/directory string /debian
d-i mirror/http/proxy string

# Clock and time zone setup
d-i time/zone string UTC
d-i clock-setup/utc boolean true

# Account setup
d-i passwd/root-login boolean true
d-i passwd/root-password password packer
d-i passwd/root-password-again password packer
d-i passwd/user-fullname string Packer User
d-i passwd/username string packer
d-i passwd/user-password password packer
d-i passwd/user-password-again password packer
d-i user-setup/allow-password-weak boolean true

# Partitioning
d-i partman-auto/disk string /dev/nvme0n1
d-i partman-auto/method string regular
d-i partman-auto/choose_recipe select ceph-osd-lvm

# 100 GB for boot, swap, and root
d-i partman-auto/expert_recipe string \
    ceph-osd-lvm :: \
        1 1 1 free \
            $iflabel{ gpt } \
            $reusemethod{ } \
            method{ biosgrub } \
        . \
        256 256 256 fat32 \
            $iflabel{ gpt } \
            $reusemethod{ } \
            method{ efi } \
            format{ } \
        . \
        4096 4096 4096 linux-swap \
            $iflabel{ gpt } \
            $reusemethod{ } \
            method{ swap } \
            format{ } \
        . \
        98304 98304 98304 ext4 \
            $iflabel{ gpt } \
            $reusemethod{ } \
            method{ format } \
            format{ } \
            use_filesystem{ } \
            filesystem{ ext4 } \
            mountpoint{ / } \
        . \
        1 1 -1 lvm \
            $iflabel{ gpt } \
            $reusemethod{ } \
            method{ lvm } \
            vg_name{ ceph-vg } \
        .

d-i partman/confirm_write_new_label boolean true
d-i partman/choose_partition select finish
d-i partman/confirm boolean true
d-i partman/confirm_nooverwrite boolean true

# Package selection
d-i pkgsel/include string openssh-server sudo wget curl build-essential
d-i pkgsel/update-policy select unattended-upgrades
d-i pkgsel/install-language-support boolean false
d-i pkgsel/upgrade select full-upgrade
tasksel tasksel/first multiselect minimal
apt-cdrom-setup apt-setup/cdrom/set-first boolean false
apt-mirror-setup apt-setup/use_mirror boolean true
popularity-contest popularity-contest/participate boolean false

# Boot loader installation
d-i grub-installer/only_debian boolean true
d-i grub-installer/with_other_os boolean true
d-i grub-installer/bootdev string /dev/nvme0n1
d-i grub-installer/choose_bootdev select /dev/nvme0n1
d-i debian-installer/add-kernel-opts string net.ifnames=0

# Console setup
console-setup console-setup/charmap47 select UTF-8
console-setup console-setup/codeset47 select	# Latin1 and Latin5 - western Europe and Turkic languages
console-setup console-setup/codesetcode string Lat15
console-setup console-setup/fontface47 select TerminusBold
console-setup console-setup/fontsize string 8x16
console-setup console-setup/fontsize-fb47 select 8x16
console-setup console-setup/fontsize-text47 select 8x16
console-setup console-setup/store_defaults_in_debconf_db boolean true

d-ipreseed/late_command string	\
    sed -i 's/^GRUB_CMDLINE_LINUX="\(.*\)"$/GRUB_CMDLINE_LINUX="\1 net.ifnames=0"/' /target/etc/default/grub in-target update-grub; \
    sed -i '/^deb cdrom:/s/^/#/' /target/etc/apt/sources.list; \
    echo 'PermitRootLogin yes' >> /target/etc/ssh/sshd_config; \
    mkdir -p /target/etc/systemd/cloud-init ; \
    cp /cdrom/files/cloud-init.cfg /target/etc/systemd/cloud-init/ ; \
    mkdir -p /target/etc/systemd/cloud-init/datasource.cfg.d ; \
    cp /cdrom/files/10_datasource.cfg /target/etc/systemd/cloud-init/datasource.cfg.d/ ; \
    cp /cdrom/files/debian-octant-config.sh /target/usr/local/sbin/ ; \
    chmod +x /target/usr/local/bin/debian-octant-config.sh ; \
    echo '[Unit]' > /target/etc/systemd/system/debian-octant-config.service ; \
    echo 'Description=Octant Node Configuration' >> /target/etc/systemd/system/debian-octant-config.service ; \
    echo 'After=network.target' >> /target/etc/systemd/system/debian-octant-config.service ; \
    echo '' >> /target/etc/systemd/system/debian-octant-config.service ; \
    echo '[Service]' >> /target/etc/systemd/system/debian-octant-config.service ; \
    echo 'Type=oneshot' >> /target/etc/systemd/system/debian-octant-config.service ; \
    echo 'ExecStart=/usr/local/bin/debian-octant-config.sh' >> /target/etc/systemd/system/debian-octant-config.service ; \
    echo 'ExecStartPost=/sbin/reboot' >> /target/etc/systemd/system/debian-octant-config.service ; \
    echo '' >> /target/etc/systemd/system/debian-octant-config.service ; \
    echo '[Install]' >> /target/etc/systemd/system/debian-octant-config.service ; \
    echo 'WantedBy=multi-user.target' >> /target/etc/systemd/system/debian-octant-config.service ; \
    in-target systemctl enable debian-octant-config.service    


d-i finish-install/reboot_in_progress note
