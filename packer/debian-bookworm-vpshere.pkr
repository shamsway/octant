variable "ssh_username" {
  default = "debian" 
}

variable "ssh_password" {
  default = "D3b1@n4Lyf3" 
}

variable "vcenter_server" {
  default = "127.0.0.1:8697"
}

variable "vcenter_username" {
  default = "matt"
}

variable "vcenter_password" {
  default = "Fuck hock1!"
}

variable "vcenter_datacenter" {
  default = ""
}

variable "vcenter_cluster" {
  default = ""
}

variable "vcenter_datastore" {
  default = ""
}

variable "vcenter_folder" {
  default = ""
}

variable "vcenter_network" {
  default = ""
}

source "vsphere-iso" "vmware" {
  vm_name              = "debian-12.5-zfs"
  guest_os_type        = "debian12-64"
  disk_size            = 20480
  disk_controller_type = ["pvscsi"]
  disk_additional_size = [20480]
  iso_url              = "https://cdimage.debian.org/debian-cd/current/amd64/iso-cd/debian-12.5.0-amd64-netinst.iso"
  iso_checksum         = "sha256:81cb1518e4d6acb2a5d3f12b28f34a6ed9caa7ae2fd4f05d99f04b83c40fe0f9"
  ssh_username         = var.ssh_username
  ssh_password         = var.ssh_password
  ssh_timeout          = "20m"
  shutdown_command     = "sudo systemctl poweroff"
  http_directory       = "http"
  boot_command         = [
    "<esc><wait>auto url=http://{{ .HTTPIP }}:{{ .HTTPPort }}/preseed.cfg<enter>"
  ]
  vcenter_server      = var.vcenter_server
  username            = var.vcenter_username
  password            = var.vcenter_password
  datacenter          = var.vcenter_datacenter
  cluster             = var.vcenter_cluster
  datastore           = var.vcenter_datastore
  folder              = var.vcenter_folder
  network_adapters    = {
    network      = "Packer"
    network_card = "vmnet3"
  }
  insecure_connection = true
}

build {
  sources = ["source.vsphere-iso.vmware"]

  provisioner "shell" {
    inline = [
      "sudo apt-get update",
      "sudo apt-get install -y cloud-init zfsutils-linux",
      "sudo zpool create -f zfspool /dev/sdb",
      "sudo zfs create -o mountpoint=/mnt/zfs zfspool/data",
      "sudo chown -R ${var.ssh_username}:${var.ssh_username} /mnt/zfs"
    ]
  }

  post-processor "manifest" {
    output = "manifest.json"
  }
}