node_name = "{{ inventory_hostname.split('.')[0] }}"

ui_config {
  enabled = true
  metrics_provider = "prometheus"
  metrics_proxy {
    base_url = "http://prometheus.service.consul:9091"
  }
}

connect {
  enabled = true
  ca_provider = "consul"
}

server = true
bind_addr = "{{ ansible_eth0.ipv4.address if region == "home" else tailscale_ip }}"
client_addr = "0.0.0.0"
datacenter = "{{ datacenter }}"
data_dir = "{{ datadirs[role_name] }}"
recursors = ["1.1.1.1", "8.8.8.8"]

{% if consul_gossip_key is defined %}
encrypt = "{{ consul_gossip_key }}"
{% endif %}

tls {
  defaults {
    ca_file = "{{ configdirs[role_name] }}/consul-agent-ca.pem"
    cert_file = "{{ configdirs[role_name] }}/{{ datacenter }}-server-consul-0.pem"
    key_file = "{{ configdirs[role_name] }}/{{ datacenter }}-server-consul-0-key.pem"
    verify_incoming = false
    verify_outgoing = false
  }
  internal_rpc {
    verify_server_hostname = false
  }
}

log_level = "INFO"
enable_syslog = true
enable_debug = true

bootstrap_expect = {{ groups['servers'] | map('extract', hostvars, 'region') | select('eq', 'home') | list | length }}
retry_join = [{% for host in groups.servers %}{% if hostvars[host]['region'] == "home" %}{% if not loop.first %}, {% endif %}"{{ host }}"{% endif %}{% endfor %}]

ports {
  https = 8501
  grpc = 8502
  grpc_tls = 8503
}

telemetry {
  prometheus_retention_time = "480h"
  disable_hostname = true
}
