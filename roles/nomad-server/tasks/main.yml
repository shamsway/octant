---
- name: Check if {{ user }} home folder exists
  ansible.builtin.file:
    path: "{{ datadir }}/home"
    state: directory
    owner: "{{ user }}"
    group: "{{ group }}"

- name: Ensure {{ user }} is a member of systemd-journal group
  ansible.builtin.user:
    name: "{{ user }}"
    groups: systemd-journal
    append: true

- name: Create user systemd configuration directory
  ansible.builtin.file:
    path: "{{ datadir }}/home/.config/systemd/user/"
    state: directory
    mode: "0700"
    owner: "{{ user }}"
    group: "{{ group }}"

- name: Verify folder presence and ownership
  ansible.builtin.file:
    path: "{{ item.path }}"
    state: directory
    owner: "{{ user }}"
    group: "{{ group }}"
    mode: "0755"
  loop: "{{ volumes }}"

- name: Install {{ role_name }}
  ansible.builtin.include_role:
    name: install-hashi
  vars:
    name: nomad-server
    package: nomad
    user: root
    group: root

# Disable the default nomad service (installed by apt) and create an override to prevent it from starting
- name: Stop and disable default nomad service
  systemd:
    name: nomad
    state: stopped
    enabled: no
  ignore_errors: yes

- name: Create systemd override directory
  file:
    path: /etc/systemd/system/nomad.service.d
    state: directory
    mode: '0755'

- name: Create systemd override for default nomad service
  copy:
    content: |
      [Unit]
      ConditionPathExists=!/etc/nomad.d/nomad.hcl

      [Service]
      ExecStart=
      ExecStart=/bin/true
    dest: /etc/systemd/system/nomad.service.d/override.conf
    mode: '0644'

- name: Check for nomad_gossip_key and generate if needed
  ansible.builtin.include_role:
    name: configure-nomad
  when: nomad_gossip_key is not defined

- name: Ensure {{ role_name }} config directory ownership
  ansible.builtin.file:
    path: "{{ configdirs[role_name] }}"
    state: directory
    owner: "{{ user }}"
    group: "{{ group }}"
    recurse: true

- name: Create {{ role_name }} config
  ansible.builtin.template:
    src: "{{ role_name }}.hcl.j2"
    dest: "{{ configdirs[role_name] }}/{{ role_name }}.hcl"
    owner: "{{ user }}"
    group: "{{ group }}"
    mode: "0644"

- name: Restart {{ role_name }}
  ansible.builtin.systemd:
    name: "{{ role_name }}"
    state: restarted

- name: Wait for {{ role_name }} to start
  ansible.builtin.wait_for:
    port: "{{ nomad.ports.http }}"
    timeout: 60
  changed_when: false    
