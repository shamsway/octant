name = "{{ inventory_hostname.split('.')[0] }}-agent"
data_dir = "{{ datadirs[role_name] }}"
datacenter = "{{ datacenter }}"
region = "{{ region }}"
bind_addr = "{{ "0.0.0.0" if region == "home" else hostvars[inventory_hostname].ansible_tailscale0.ipv4.address }}"
log_level = "info"

server {
  enabled = false
}

ports {
  http = {{ nomad.ports.agent_http }}
  rpc  = {{ nomad.ports.agent_rpc }}
  serf = {{ nomad.ports.agent_gossip }}
}

{% if (nomad.tls_enabled | default('', false)) %}
tls {
  ca_file   = "{{ configdirs['tls'] }}/consul-agent-ca.pem"
  cert_file = "{{ configdirs['tls'] }}/{{ region }}-client-nomad.pem"
  key_file  = "{{ configdirs['tls'] }}/{{ region }}-client-nomad-key.pem"
  rpc  = true
}
{% endif %}

consul {
    auto_advertise = true
    server_auto_join = true
    client_auto_join = true    
{% if (consul.tls_enabled | default('', false)) %}
    address = "127.0.0.1:{{ consul.ports.agent_https }}"
    grpc_address = "127.0.0.1:{{ consul.ports.agent_grpc_tls }}"    
    ssl = true
    verify_ssl = true
    ca_file = "{{ configdirs['tls'] }}/consul-agent-ca.pem"
    cert_file = "{{ configdirs['tls'] }}/{{ datacenter }}-client-consul-0.pem"
    key_file = "{{ configdirs['tls'] }}/{{ datacenter }}-client-consul-0-key.pem"
    grpc_ca_file = "{{ configdirs['tls'] }}/consul-agent-ca.pem"
{% else %}
    address = "127.0.0.1:{{ consul.ports.agent_http }}"
    grpc_address = "127.0.0.1:{{ consul.ports.agent_grpc }}
    ssl = false
{% endif %}
}

telemetry {
  publish_allocation_metrics = true
  publish_node_metrics       = true
  prometheus_metrics         = true
}

{% if podman %}
plugin "nomad-driver-podman" {
  config {
    socket_path="unix://run/user/{{uid}}/podman/podman.sock"
    volumes {
      enabled = true
    }
    extra_labels = ["job_name", "job_id", "task_group_name", "task_name", "namespace", "node_name", "node_id"]
  }
}
{% endif %}

plugin "raw_exec" {
  config {
    enabled = true
  }
}

client {
  enabled = true

  meta {
    rootless = true
  }

  {% for vol in volumes %}
  host_volume "{{ vol.name }}" {
      path      = "{{ vol.path }}"
      read_only = false
  }
  {% endfor %}
}