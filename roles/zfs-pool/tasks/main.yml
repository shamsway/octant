---
- name: Configure ZFS Pool
  become: true

  block:
    - name: Add contrib component to APT sources
      ansible.builtin.shell: |
        sed -r -i'.BAK' 's/^deb(.*)$/deb\1 contrib/g' /etc/apt/sources.list

    - name: Update APT cache
      ansible.builtin.apt:
        update_cache: true

    - name: Install ZFS and NFS packages
      ansible.builtin.package:
        name:
          - linux-headers-amd64
          - zfsutils-linux
          - zfs-dkms
          - zfs-zed
          - nfs-kernel-server
        state: present

    - name: Load ZFS module
      community.general.modprobe:
        name: zfs
        state: present

    - name: Check ZFS version
      ansible.builtin.command: zfs version
      register: zfs_version_result
      changed_when: false

    - name: Print ZFS version
      ansible.builtin.debug:
        var: zfs_version_result.stdout_lines

    - name: Create ZFS pool
      ansible.builtin.command: zpool create {{ zfs_pool_name }} {{ zfs_pool_device }}
      register: zpool_create_result
      failed_when:
        - zpool_create_result.rc != 0
        - "'pool \\"' ~ zfs_pool_name ~ '\\" already exists' not in zpool_create_result.stderr"
      changed_when: "'pool \\"' ~ zfs_pool_name ~ '\\" already exists' not in zpool_create_result.stderr"

    - name: Create ZFS dataset
      community.general.zfs:
        name: "{{ zfs_pool_name }}/{{ zfs_dataset_name }}"
        state: present

    - name: Set ZFS dataset mountpoint
      community.general.zfs:
        name: "{{ zfs_pool_name }}/{{ zfs_dataset_name }}"
        mountpoint: "{{ nfs_share_path }}"
        state: present

    - name: Configure NFS share
      ansible.builtin.lineinfile:
        path: /etc/exports
        line: "{{ nfs_share_path }} *(rw,sync,no_root_squash)"
        state: present

    - name: Start and enable NFS server
      ansible.builtin.service:
        name: nfs-server
        state: started
        enabled: true

    - name: Export NFS share
      ansible.builtin.command: exportfs -ar

    - name: Configure firewall for NFS
      ansible.posix.firewalld:
        service: nfs
        permanent: true
        state: enabled
        immediate: true

  # - name: Configure ZFS snapshot and replication
  #   ansible.builtin.cron:
  #     name: ZFS snapshot and replication
  #     minute: "0"
  #     hour: "*/6"
  #     job: |
  #       /usr/sbin/zfs snapshot {{ zfs_pool_name }}/{{ zfs_dataset_name }}@$(date +\%Y\%m\%d\%H\%M)
  #       /usr/sbin/zfs send -i @$(date -d '6 hours ago' +\%Y\%m\%d\%H\%M) {{ zfs_pool_name }}/{{ zfs_dataset_name }}@$(date +\%Y\%m\%d\%H\%M) | ssh user@remote-host "zfs receive -F backup/{{ zfs_dataset_name }}"
  #     state: present
