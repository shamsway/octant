---
- name: Set variables for {{ name }}
  set_fact:
    configdir: "{{ configdirs[name] }}"
    datadir: "{{ datadirs[name] }}"
  when: name in ['consul-server', 'nomad-server']

- name: Using these variables
  debug:
    msg: |
      Config Directory: {{ configdir }}
      Data Directory: {{ datadir }}

- name: Install {{ name }}
  ansible.builtin.package:
    name: "{{ name }}"
    state: present

- name: Register systemd service
  ansible.builtin.systemd:
    name: "{{ name }}"
    enabled: true
    state: stopped

- name: Ensure directory exists and has proper ownership
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    recurse: true
    owner: "{{ user }}"
    group: "{{ group }}"
    follow: false
  with_items:
    - "{{ configdir }}"
    - "{{ datadir }}"

- name: Delete old directory if any
  ansible.builtin.file:
    path: /etc/{{ name }}.d
    state: absent

- name: Get Tailscale IP
  when: tailscale_ip is not defined
  block:
  - name: Get Tailscale IP address
    ansible.builtin.command:
      cmd: tailscale ip -4
    register: tailscale_ip_output
    changed_when: false
    
  - name: Set Tailscale IP address as a variable
    ansible.builtin.set_fact:
      tailscale_ip: "{{ tailscale_ip_output.stdout }}"

- name: Create hcl config file
  ansible.builtin.template:
    src: ./templates/{{ name }}.hcl.j2
    dest: "{{ configdir }}/{{ name }}.hcl"
    owner: "{{ user }}"
    group: "{{ group }}"
    mode: "0644"

- name: Create a symbolic link
  ansible.builtin.file:
    src: "{{ configdir }}/{{ name }}.d"
    dest: /etc/{{ name }}.d
    owner: "{{ user }}"
    group: "{{ group }}"
    state: link
    follow: false
    force: true

- name: Install service file
  ansible.builtin.template:
    src: ./templates/{{ name }}.service.j2
    dest: /etc/systemd/system/{{ name }}.service
    owner: "{{ user }}"
    group: "{{ group }}"
    mode: "0644"

- name: Register systemd service
  ansible.builtin.systemd:
    name: "{{ name }}"
    enabled: true
    daemon_reload: true
    state: started
